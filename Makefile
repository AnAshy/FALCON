
######

ATSUSRQ="$(ATSHOME)"
ifeq ($(ATSUSRQ),"")
ATSUSRQ="/usr"
endif

ATSPREL=$(ATSUSRQ)/ccomp/runtime/ats_prelude.c
######

CC=gcc
ATSCC=$(ATSUSRQ)/bin/atscc
ATSOPT=$(ATSUSRQ)/bin/atsopt

######

CFLAGS_ATS=-I$(ATSUSRQ) -I$(ATSUSRQ)/ccomp/runtime/
LDFLAGS_ATS=-L$(ATSUSRQ)/ccomp/lib/
LDFLAGS = $(LDFLAGS_ATS)
CFLAGS = $(CFLAGS_ATS)
# Need to remove this and generate all source:
ATSGC = $(ATSUSRQ)/ccomp/runtime/GCATS/gc.o
######

.PHONY: all
all:: checkall
# all:: cleanall

######

checkall::
cleanall:: clean
cleanall:: ; $(RMF) *_?ats.html 
cleanall:: ; $(RMF) *.c
######


checkall:: minDisj
cleanall:: ; $(RMF) minDisj
minDisj: minDisjNoCov_dats.c sstream_dats.c sstream_sats.c
	$(CC) -O2 -D_ATS_GCATS $(CFLAGS) $(LDFLAGS) -o minDisj $(ATSGC) \
        minDisjNoCov_dats.c sstream_dats.c sstream_sats.c $(ATSPREL) -lm -lats

%_sats.c: %.sats; $(ATSOPT) --output $@ --static  $<
%_dats.c: %.dats; $(ATSOPT) --output $@ --dynamic $<

######

#As a first step for a portable build, compile a file for .sats and .dats that
#includes all other files, along with the file generated by
#gcc -MM and some processing script to make e.g. atsmake-pre.mk 

# !! Actually, probably need to do separate files for .sats and .dats

#portable:: minDisjPort
#portable:: 

#minDisjPort:: portdep

portable: minDisjNoCov_port_sats.c minDisjNoCov_port_dats.c

portdep: .depend

.depend: minDisjNoCov_port_sats.c minDisjNoCov_port_dats.c
	rm -f ./.depend
	$(CC) $(CFLAGS) -MM $^ -MF ./depend;

minDisjNoCov_port_sats.c: minDisjNoCov_port.sats
	$(ATSOPT) --output minDisjNoCov_port_sats.c --static minDisjNoCov_port.sats

minDisjNoCov_port_dats.c: minDisjNoCov_port.dats
	$(ATSOPT) --output minDisjNoCov_port_dats.c --dynamic minDisjNoCov_port.dats 


html:: ; $(ATSOPT) --posmark_html -d minDisjNoCov.dats > minDisjNoCov_dats.html

######

RMF = rm -f

######

clean:
	$(RMF) *~
	$(RMF) *_?ats.o

###### end of [Makefile] ######
